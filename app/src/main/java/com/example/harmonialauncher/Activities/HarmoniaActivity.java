package com.example.harmonialauncher.Activities;

import android.app.AlertDialog;
import android.content.Intent;
import android.os.Build;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.Window;
import android.provider.Settings;

import androidx.appcompat.app.AppCompatActivity;

import com.example.harmonialauncher.R;
import com.example.harmonialauncher.gesture.Gesturable;
import com.example.harmonialauncher.lock.Lockable;
import com.example.harmonialauncher.overlay.ForegroundService;
import com.example.harmonialauncher.overlay.OverlayWindow;

public abstract class HarmoniaActivity extends AppCompatActivity implements Lockable, Gesturable {
    private static final String TAG = HarmoniaActivity.class.getSimpleName();

    protected boolean locked = false;
    protected boolean onScreen = false;

    public void lock() {
        locked = true;
    }

    public void lock(long millisLocked) {
        locked = true;
    }

    public void unlock() {
        locked = false;
    }

    public boolean isLocked() {
        return locked;
    }

    public long getTimeRemaining() {
        return 0;
    }

    public long getEndTime() {
        return 0;
    }

    //---------------------------------<Methods for Capturing Gestures>----------------------------
    public boolean onDown(MotionEvent event) {
        return false;
    }

    public boolean onFling(MotionEvent event1, MotionEvent event2, float velocityX, float velocityY) {
        return false;
    }

    public void onLongPress(MotionEvent event) {
    }

    public boolean onSingleTapConfirmed(MotionEvent event) {
        return false;
    }

    // ------------------------------------<Methods for Tracking On Screen>-------------------------
    public void onStart() {
        onScreen = true;
        super.onStart();
    }

    public void onResume() {
        onScreen = true;
        super.onResume();
    }

    public void onDestroy() {
        onScreen = false;
        super.onDestroy();
    }

    public void onPause() {
        onScreen = false;
        super.onPause();
    }

    public void onStop() {
        onScreen = false;
        super.onStop();
    }

    public boolean isOnScreen() {
        return onScreen;
    }

    // ---------------------------------<Methods for Full Screen Overlay>---------------------------
    OverlayWindow window = null;

    public void showOverlay()
    {
        checkOverlayPermission();
        startService();
        /*AlertDialog.Builder builder = new AlertDialog.Builder(this);
        LayoutInflater inflater = getLayoutInflater();
        View customView = inflater.inflate(R.layout.overlay, null);

        builder.setView(customView);

        AlertDialog d = builder.create();

        //Disable default title generated by android
        d.requestWindowFeature(Window.FEATURE_NO_TITLE);

        d.show();*/
    }

    public void checkOverlayPermission()
    {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            if (!Settings.canDrawOverlays(this)) {
                // Send user to the device settings
                Intent myIntent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION);
                startActivity(myIntent);
            }
        }
    }

    public void startService()
    {
        window = new OverlayWindow(this);
        window.open();
        window.setBlur(70f);
        /*if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            // Check if the user has already granted the Draw Over Other Apps permission
            if(Settings.canDrawOverlays(this)) {
                // start the service based on the android version
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                    startForegroundService(new Intent(this, ForegroundService.class));
                } else {
                    startService(new Intent(this, ForegroundService.class));
                }
            }
        }else{
            startService(new Intent(this, ForegroundService.class));
        }*/
    }

    public void endService()
    {
        if (window != null)
            window.close();
    }
}
